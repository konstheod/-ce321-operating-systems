

***************************************************************************************************************

[  573.623203] [CLOOK] dsp W 322623
[  573.623379] [CLOOK] dsp W 323647
[  573.623641] [CLOOK] dsp W 324671
[  573.623826] [CLOOK] dsp W 325695
[  573.624067] [CLOOK] dsp W 326719
[  573.624303] [CLOOK] dsp W 327743
[  573.624312] [CLOOK] add W 327839
[  573.627984] [CLOOK] add W 345151
[  573.627986] [CLOOK] add W 346175
[  573.627987] [CLOOK] add W 347199
[  573.627988] [CLOOK] add W 348223
[  573.627990] [CLOOK] add W 349247

Ακολουθούν διαδοχικά add W με την τιμή του end_sector να είναι σε αύξουσα σειρά.

[  573.632828] [CLOOK] add W 425023
[  573.632829] [CLOOK] add W 426047
[  573.632832] [CLOOK] add W 426183
[  573.632851] [CLOOK] add W 295111
[  573.845705] [CLOOK] dsp W 327879
[  573.847272] [CLOOK] dsp W 345151
[  574.012807] [CLOOK] dsp W 346175
[  574.015641] [CLOOK] dsp W 347199
[  574.047058] [CLOOK] dsp W 348223
[  574.055183] [CLOOK] dsp W 349247

Το τελευταίο dispatch που έγινε στο σύστημα είχε αριθμό end_sector 327743.
Παρατηρούμε ότι ο αλγόριθμός μας δουλεύει σωστά, αφού κάποια στιγμή γίνεται ένα add W με end_sector 295111, 
το οποίο είναι μικρότερο από τα προηγόυμενα add που έχουν γίνει, όπως και απο το τελευταίο dispatch.
Στη συνέχεια, εφόσον 295111<327743, όπως ήταν αναμενόμενο δεν θα πάρει το μικροτέρο στη λίστα/το πιο κοντινό,
αλλά το αμέσως επόμενο του τελευταίου dispatch (ανεξαρτήτως του πότε προστέθηκε στη λίστα).

[  577.706535] [CLOOK] dsp W 441543
[  577.706678] [CLOOK] dsp W 442431
[  577.706686] [CLOOK] add W 475295
[  577.707410] [CLOOK] add W 296135
[  577.707412] [CLOOK] add W 297159

Ακολουθούν διαδοχικά add W με την τιμή του end_sector να είναι σε αύξουσα σειρά.

[  577.708402] [CLOOK] add W 367815
[  577.708403] [CLOOK] add W 368839
[  577.708414] [CLOOK] add W 655
[  577.708415] [CLOOK] add W 719
[  577.708416] [CLOOK] add W 847
[  577.708964] [CLOOK] add W 304327
[  577.708965] [CLOOK] add W 305351

Ακολουθούν διαδοχικά add W με την τιμή του end_sector να είναι σε αύξουσα σειρά.

[  577.710104] [CLOOK] add R 607
[  577.735635] [CLOOK] dsp W 475295
[  577.737771] [CLOOK] dsp W 491679
[  577.779334] [CLOOK] dsp W 508063
[  577.781758] [CLOOK] dsp R 607
[  577.784185] [CLOOK] dsp W 655
[  577.788921] [CLOOK] dsp W 719
[  577.795184] [CLOOK] dsp W 847
[  577.803187] [CLOOK] dsp W 296135

Παρατηρούμε ότι αν και γίνονται add με μη αύξουσα σειρά, το dispatch συνεχίζει να διαλέγει end_sector 
από εκεί που σταμάτησε, και όταν τελειώσει, ξεκινάει να σαρώνει τη λίστα πάλι από την αρχή.

Μια επιπλέον παρατήρηση είναι ότι ήρθε ένα add R, μπήκε στην ουρά και ο αλγόριθμός εκτελέστηκε κανονικά.
***************************************************************************************************************